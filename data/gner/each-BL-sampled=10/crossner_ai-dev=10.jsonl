{"id":"7","dataset":"crossner_ai","split":"dev","instance":{"id":"7","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: programming language, researcher, location, organization, metric, conference, field, person, algorithm, product, country, task, university and O.\nSentence: Since the Google acquisition , the company has notched up a number of significant achievements , perhaps the most notable being the creation of AlphaGo , a program that defeated world champion Lee Sedol at the complex game of Go .","prompt_labels":"Since(O) the(O) Google(B-organization) acquisition(O) ,(O) the(O) company(O) has(O) notched(O) up(O) a(O) number(O) of(O) significant(O) achievements(O) ,(O) perhaps(O) the(O) most(O) notable(O) being(O) the(O) creation(O) of(O) AlphaGo(B-product) ,(O) a(O) program(O) that(O) defeated(O) world(O) champion(O) Lee(B-person) Sedol(I-person) at(O) the(O) complex(O) game(O) of(O) Go(O) .(O)","words":["Since","the","Google","acquisition",",","the","company","has","notched","up","a","number","of","significant","achievements",",","perhaps","the","most","notable","being","the","creation","of","AlphaGo",",","a","program","that","defeated","world","champion","Lee","Sedol","at","the","complex","game","of","Go","."],"labels":["O","O","B-organization","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","B-product","O","O","O","O","O","O","O","B-person","I-person","O","O","O","O","O","O","O"]},"label_list":["programming language","researcher","location","organization","metric","conference","field","person","algorithm","product","country","task","university"]}
{"id":"31","dataset":"crossner_ai","split":"dev","instance":{"id":"31","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: person, product, metric, programming language, task, researcher, organization, conference, university, field, country, location, algorithm and O.\nSentence: The Arduino integrated development environment ( IDE ) is a cross-platform application ( for Windows , macOS , and Linux ) that is written in the programming language Java .","prompt_labels":"The(O) Arduino(B-product) integrated(O) development(O) environment(O) ((O) IDE(O) )(O) is(O) a(O) cross-platform(O) application(O) ((O) for(O) Windows(B-product) ,(O) macOS(B-product) ,(O) and(O) Linux(B-product) )(O) that(O) is(O) written(O) in(O) the(O) programming(O) language(O) Java(B-programming language) .(O)","words":["The","Arduino","integrated","development","environment","(","IDE",")","is","a","cross-platform","application","(","for","Windows",",","macOS",",","and","Linux",")","that","is","written","in","the","programming","language","Java","."],"labels":["O","B-product","O","O","O","O","O","O","O","O","O","O","O","O","B-product","O","B-product","O","O","B-product","O","O","O","O","O","O","O","O","B-programming language","O"]},"label_list":["person","product","metric","programming language","task","researcher","organization","conference","university","field","country","location","algorithm"]}
{"id":"41","dataset":"crossner_ai","split":"dev","instance":{"id":"41","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: algorithm, location, metric, conference, country, product, researcher, task, university, person, programming language, organization, field and O.\nSentence: A Java implementation using zero based array indexes along with a convenience method for printing the solved order of operations :","prompt_labels":"A(O) Java(B-programming language) implementation(O) using(O) zero(O) based(O) array(O) indexes(O) along(O) with(O) a(O) convenience(O) method(O) for(O) printing(O) the(O) solved(O) order(O) of(O) operations(O) :(O)","words":["A","Java","implementation","using","zero","based","array","indexes","along","with","a","convenience","method","for","printing","the","solved","order","of","operations",":"],"labels":["O","B-programming language","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O"]},"label_list":["algorithm","location","metric","conference","country","product","researcher","task","university","person","programming language","organization","field"]}
{"id":"139","dataset":"crossner_ai","split":"dev","instance":{"id":"139","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: algorithm, conference, organization, programming language, field, product, researcher, country, location, task, university, person, metric and O.\nSentence: One of the first versions of the theorem was proved by George Cybenko in 1989 for sigmoid function activation functions. Cybenko G. ( 1989 ) , 2 ( 4 ) , 303-314 .","prompt_labels":"One(O) of(O) the(O) first(O) versions(O) of(O) the(O) theorem(O) was(O) proved(O) by(O) George(B-researcher) Cybenko(I-researcher) in(O) 1989(O) for(O) sigmoid(B-algorithm) function(I-algorithm) activation(O) functions.(O) Cybenko(B-researcher) G.(I-researcher) ((O) 1989(O) )(O) ,(O) 2(O) ((O) 4(O) )(O) ,(O) 303-314(O) .(O)","words":["One","of","the","first","versions","of","the","theorem","was","proved","by","George","Cybenko","in","1989","for","sigmoid","function","activation","functions.","Cybenko","G.","(","1989",")",",","2","(","4",")",",","303-314","."],"labels":["O","O","O","O","O","O","O","O","O","O","O","B-researcher","I-researcher","O","O","O","B-algorithm","I-algorithm","O","O","B-researcher","I-researcher","O","O","O","O","O","O","O","O","O","O","O"]},"label_list":["algorithm","conference","organization","programming language","field","product","researcher","country","location","task","university","person","metric"]}
{"id":"161","dataset":"crossner_ai","split":"dev","instance":{"id":"161","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: metric, university, person, task, algorithm, product, researcher, field, programming language, organization, country, conference, location and O.\nSentence: Popular loss functions include the hinge loss ( for linear SVMs ) and the log loss ( for logistic regression ) .","prompt_labels":"Popular(O) loss(O) functions(O) include(O) the(O) hinge(B-metric) loss(I-metric) ((O) for(O) linear(B-algorithm) SVMs(I-algorithm) )(O) and(O) the(O) log(B-metric) loss(I-metric) ((O) for(O) logistic(B-algorithm) regression(I-algorithm) )(O) .(O)","words":["Popular","loss","functions","include","the","hinge","loss","(","for","linear","SVMs",")","and","the","log","loss","(","for","logistic","regression",")","."],"labels":["O","O","O","O","O","B-metric","I-metric","O","O","B-algorithm","I-algorithm","O","O","O","B-metric","I-metric","O","O","B-algorithm","I-algorithm","O","O"]},"label_list":["metric","university","person","task","algorithm","product","researcher","field","programming language","organization","country","conference","location"]}
{"id":"172","dataset":"crossner_ai","split":"dev","instance":{"id":"172","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: person, conference, researcher, programming language, metric, field, algorithm, university, task, product, organization, location, country and O.\nSentence: The Apple iOS operating system used on the iPhone , iPad and iPod Touch uses VoiceOver speech synthesis accessibility .","prompt_labels":"The(O) Apple(B-product) iOS(I-product) operating(I-product) system(I-product) used(O) on(O) the(O) iPhone(B-product) ,(O) iPad(B-product) and(O) iPod(B-product) Touch(I-product) uses(O) VoiceOver(B-product) speech(I-product) synthesis(I-product) accessibility(O) .(O)","words":["The","Apple","iOS","operating","system","used","on","the","iPhone",",","iPad","and","iPod","Touch","uses","VoiceOver","speech","synthesis","accessibility","."],"labels":["O","B-product","I-product","I-product","I-product","O","O","O","B-product","O","B-product","O","B-product","I-product","O","B-product","I-product","I-product","O","O"]},"label_list":["person","conference","researcher","programming language","metric","field","algorithm","university","task","product","organization","location","country"]}
{"id":"247","dataset":"crossner_ai","split":"dev","instance":{"id":"247","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: field, researcher, location, country, conference, university, organization, product, task, algorithm, person, programming language, metric and O.\nSentence: With David E. Rumelhart and Ronald J. Williams , Hinton was co-author of a highly cited paper published in 1986 that popularized the backpropagation algorithm for training multi-layer neural networks , The dramatic image-recognition milestone of the AlexNet designed by his student Alex Krizhevsky { { cite web","prompt_labels":"With(O) David(B-researcher) E.(I-researcher) Rumelhart(I-researcher) and(O) Ronald(B-researcher) J.(I-researcher) Williams(I-researcher) ,(O) Hinton(B-researcher) was(O) co-author(O) of(O) a(O) highly(O) cited(O) paper(O) published(O) in(O) 1986(O) that(O) popularized(O) the(O) backpropagation(B-algorithm) algorithm(I-algorithm) for(O) training(O) multi-layer(B-algorithm) neural(I-algorithm) networks(I-algorithm) ,(O) The(O) dramatic(O) image-recognition(B-task) milestone(O) of(O) the(O) AlexNet(B-algorithm) designed(O) by(O) his(O) student(O) Alex(B-researcher) Krizhevsky(I-researcher) {(O) {(O) cite(O) web(O)","words":["With","David","E.","Rumelhart","and","Ronald","J.","Williams",",","Hinton","was","co-author","of","a","highly","cited","paper","published","in","1986","that","popularized","the","backpropagation","algorithm","for","training","multi-layer","neural","networks",",","The","dramatic","image-recognition","milestone","of","the","AlexNet","designed","by","his","student","Alex","Krizhevsky","{","{","cite","web"],"labels":["O","B-researcher","I-researcher","I-researcher","O","B-researcher","I-researcher","I-researcher","O","B-researcher","O","O","O","O","O","O","O","O","O","O","O","O","O","B-algorithm","I-algorithm","O","O","B-algorithm","I-algorithm","I-algorithm","O","O","O","B-task","O","O","O","B-algorithm","O","O","O","O","B-researcher","I-researcher","O","O","O","O"]},"label_list":["field","researcher","location","country","conference","university","organization","product","task","algorithm","person","programming language","metric"]}
{"id":"292","dataset":"crossner_ai","split":"dev","instance":{"id":"292","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: algorithm, product, task, university, metric, person, programming language, location, conference, country, organization, researcher, field and O.\nSentence: The manipulator is what makes the robot move , and the design of these systems can be categorized into several common types , such as SCARA and cartesian coordinate robot , which use different coordinate systems to direct the arms of the machine .","prompt_labels":"The(O) manipulator(O) is(O) what(O) makes(O) the(O) robot(O) move(O) ,(O) and(O) the(O) design(O) of(O) these(O) systems(O) can(O) be(O) categorized(O) into(O) several(O) common(O) types(O) ,(O) such(O) as(O) SCARA(O) and(O) cartesian(O) coordinate(O) robot(O) ,(O) which(O) use(O) different(O) coordinate(O) systems(O) to(O) direct(O) the(O) arms(O) of(O) the(O) machine(O) .(O)","words":["The","manipulator","is","what","makes","the","robot","move",",","and","the","design","of","these","systems","can","be","categorized","into","several","common","types",",","such","as","SCARA","and","cartesian","coordinate","robot",",","which","use","different","coordinate","systems","to","direct","the","arms","of","the","machine","."],"labels":["O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O"]},"label_list":["algorithm","product","task","university","metric","person","programming language","location","conference","country","organization","researcher","field"]}
{"id":"319","dataset":"crossner_ai","split":"dev","instance":{"id":"319","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: field, university, organization, conference, task, algorithm, metric, country, location, researcher, programming language, product, person and O.\nSentence: The method is based on estimating the conditional probabilities using the nonparametric maximum likelihood method which leads","prompt_labels":"The(O) method(O) is(O) based(O) on(O) estimating(O) the(O) conditional(O) probabilities(O) using(O) the(O) nonparametric(B-metric) maximum(I-metric) likelihood(I-metric) method(O) which(O) leads(O)","words":["The","method","is","based","on","estimating","the","conditional","probabilities","using","the","nonparametric","maximum","likelihood","method","which","leads"],"labels":["O","O","O","O","O","O","O","O","O","O","O","B-metric","I-metric","I-metric","O","O","O"]},"label_list":["field","university","organization","conference","task","algorithm","metric","country","location","researcher","programming language","product","person"]}
{"id":"330","dataset":"crossner_ai","split":"dev","instance":{"id":"330","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: country, researcher, metric, conference, university, location, person, product, programming language, algorithm, organization, task, field and O.\nSentence: In addition to the standard hinge loss math ( 1-yf ( x ) ) _ + / math for labeled data , a loss function math ( -1 | f ( x ) | ) _ + / math is introduced over the unlabeled data by letting mathy = \\ operatorname { sign } { f ( x ) } / math .","prompt_labels":"In(O) addition(O) to(O) the(O) standard(O) hinge(B-metric) loss(I-metric) math(O) ((O) 1-yf(O) ((O) x(O) )(O) )(O) _(O) +(O) /(O) math(O) for(O) labeled(O) data(O) ,(O) a(O) loss(O) function(O) math(O) ((O) -1(O) |(O) f(O) ((O) x(O) )(O) |(O) )(O) _(O) +(O) /(O) math(O) is(O) introduced(O) over(O) the(O) unlabeled(O) data(O) by(O) letting(O) mathy(O) =(O) \\(O) operatorname(O) {(O) sign(O) }(O) {(O) f(O) ((O) x(O) )(O) }(O) /(O) math(O) .(O)","words":["In","addition","to","the","standard","hinge","loss","math","(","1-yf","(","x",")",")","_","+","/","math","for","labeled","data",",","a","loss","function","math","(","-1","|","f","(","x",")","|",")","_","+","/","math","is","introduced","over","the","unlabeled","data","by","letting","mathy","=","\\","operatorname","{","sign","}","{","f","(","x",")","}","/","math","."],"labels":["O","O","O","O","O","B-metric","I-metric","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O"]},"label_list":["country","researcher","metric","conference","university","location","person","product","programming language","algorithm","organization","task","field"]}
