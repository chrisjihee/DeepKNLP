{"id":"7","dataset":"crossner_ai","split":"dev","instance":{"id":"7","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\\nOutput format is: word_1(label_1), word_2(label_2), ...\\nWe'll use the BIO-format to label the entities, where:\\n1. B- (Begin) indicates the start of a named entity.\\n2. I- (Inside) is used for words within a named entity but are not the first word.\\n3. O (Outside) denotes words that are not part of a named entity.\\n\\nUse the specific entity tags: programming language, researcher, location, organization, metric, conference, field, person, algorithm, product, country, task, university and O.\\nSentence: After the Google acquisition , AlphaGo notably defeated Lee Sedol .","prompt_labels":"After(O) the(O) Google(B-organization) acquisition(O) ,(O) AlphaGo(B-product) notably(O) defeated(O) Lee(B-person) Sedol(I-person) .(O)","words":["After","the","Google","acquisition",",","AlphaGo","notably","defeated","Lee","Sedol","."],"labels":["O","O","B-organization","O","O","B-product","O","O","B-person","I-person","O"]},"label_list":["programming language","researcher","location","organization","metric","conference","field","person","algorithm","product","country","task","university"]}
{"id":"7","dataset":"crossner_ai","split":"dev","instance":{"id":"7","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: programming language, researcher, location, organization, metric, conference, field, person, algorithm, product, country, task, university and O.\nSentence: Since the Google acquisition , the company has notched up a number of significant achievements , perhaps the most notable being the creation of AlphaGo , a program that defeated world champion Lee Sedol at the complex game of Go .","prompt_labels":"Since(O) the(O) Google(B-organization) acquisition(O) ,(O) the(O) company(O) has(O) notched(O) up(O) a(O) number(O) of(O) significant(O) achievements(O) ,(O) perhaps(O) the(O) most(O) notable(O) being(O) the(O) creation(O) of(O) AlphaGo(B-product) ,(O) a(O) program(O) that(O) defeated(O) world(O) champion(O) Lee(B-person) Sedol(I-person) at(O) the(O) complex(O) game(O) of(O) Go(O) .(O)","words":["Since","the","Google","acquisition",",","the","company","has","notched","up","a","number","of","significant","achievements",",","perhaps","the","most","notable","being","the","creation","of","AlphaGo",",","a","program","that","defeated","world","champion","Lee","Sedol","at","the","complex","game","of","Go","."],"labels":["O","O","B-organization","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","B-product","O","O","O","O","O","O","O","B-person","I-person","O","O","O","O","O","O","O"]},"label_list":["programming language","researcher","location","organization","metric","conference","field","person","algorithm","product","country","task","university"]}
{"id":"10","dataset":"crossner_ai","split":"dev","instance":{"id":"10","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: product, university, conference, country, programming language, person, task, location, algorithm, metric, researcher, field, organization and O.\nSentence: In 1969 , Scheinman invented the Stanford arm ,","prompt_labels":"In(O) 1969(O) ,(O) Scheinman(B-researcher) invented(O) the(O) Stanford(B-product) arm(I-product) ,(O)","words":["In","1969",",","Scheinman","invented","the","Stanford","arm",","],"labels":["O","O","O","B-researcher","O","O","B-product","I-product","O"]},"label_list":["product","university","conference","country","programming language","person","task","location","algorithm","metric","researcher","field","organization"]}
{"id":"14","dataset":"crossner_ai","split":"dev","instance":{"id":"14","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: metric, algorithm, researcher, product, conference, university, field, person, location, programming language, task, organization, country and O.\nSentence: It includes an upper ontology , created by the IEEE working group P1600.1 ( originally by Ian Niles and Adam Pease ) .","prompt_labels":"It(O) includes(O) an(O) upper(O) ontology(O) ,(O) created(O) by(O) the(O) IEEE(B-organization) working(O) group(O) P1600.1(O) ((O) originally(O) by(O) Ian(B-researcher) Niles(I-researcher) and(O) Adam(B-researcher) Pease(I-researcher) )(O) .(O)","words":["It","includes","an","upper","ontology",",","created","by","the","IEEE","working","group","P1600.1","(","originally","by","Ian","Niles","and","Adam","Pease",")","."],"labels":["O","O","O","O","O","O","O","O","O","B-organization","O","O","O","O","O","O","B-researcher","I-researcher","O","B-researcher","I-researcher","O","O"]},"label_list":["metric","algorithm","researcher","product","conference","university","field","person","location","programming language","task","organization","country"]}
{"id":"17","dataset":"crossner_ai","split":"dev","instance":{"id":"17","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: researcher, location, programming language, person, algorithm, metric, field, conference, university, task, country, organization, product and O.\nSentence: Today , the field has become even more daunting and complex with the addition of circuit , systems and signal analysis and design languages and software , from MATLAB and Simulink to NumPy , VHDL , PSpice , Verilog and even Assembly language .","prompt_labels":"Today(O) ,(O) the(O) field(O) has(O) become(O) even(O) more(O) daunting(O) and(O) complex(O) with(O) the(O) addition(O) of(O) circuit(O) ,(O) systems(O) and(O) signal(O) analysis(O) and(O) design(O) languages(O) and(O) software(O) ,(O) from(O) MATLAB(B-product) and(O) Simulink(B-product) to(O) NumPy(B-product) ,(O) VHDL(B-product) ,(O) PSpice(B-product) ,(O) Verilog(B-product) and(O) even(O) Assembly(B-programming language) language(I-programming language) .(O)","words":["Today",",","the","field","has","become","even","more","daunting","and","complex","with","the","addition","of","circuit",",","systems","and","signal","analysis","and","design","languages","and","software",",","from","MATLAB","and","Simulink","to","NumPy",",","VHDL",",","PSpice",",","Verilog","and","even","Assembly","language","."],"labels":["O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","B-product","O","B-product","O","B-product","O","B-product","O","B-product","O","B-product","O","O","B-programming language","I-programming language","O"]},"label_list":["researcher","location","programming language","person","algorithm","metric","field","conference","university","task","country","organization","product"]}
{"id":"23","dataset":"crossner_ai","split":"dev","instance":{"id":"23","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: organization, country, algorithm, programming language, task, field, conference, product, person, metric, researcher, location, university and O.\nSentence: However , in the last years , one can observe appearing of different e-services and related initiatives in developing countries such as Project Nemmadi , MCA21 Mission Mode Project or Digital India even more , in India ; Electronic Government Directorate in Pakistan ; etc .","prompt_labels":"However(O) ,(O) in(O) the(O) last(O) years(O) ,(O) one(O) can(O) observe(O) appearing(O) of(O) different(O) e-services(O) and(O) related(O) initiatives(O) in(O) developing(O) countries(O) such(O) as(O) Project(O) Nemmadi(O) ,(O) MCA21(O) Mission(O) Mode(O) Project(O) or(O) Digital(O) India(O) even(O) more(O) ,(O) in(O) India(B-country) ;(O) Electronic(B-organization) Government(I-organization) Directorate(I-organization) in(O) Pakistan(B-country) ;(O) etc(O) .(O)","words":["However",",","in","the","last","years",",","one","can","observe","appearing","of","different","e-services","and","related","initiatives","in","developing","countries","such","as","Project","Nemmadi",",","MCA21","Mission","Mode","Project","or","Digital","India","even","more",",","in","India",";","Electronic","Government","Directorate","in","Pakistan",";","etc","."],"labels":["O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","B-country","O","B-organization","I-organization","I-organization","O","B-country","O","O","O"]},"label_list":["organization","country","algorithm","programming language","task","field","conference","product","person","metric","researcher","location","university"]}
{"id":"28","dataset":"crossner_ai","split":"dev","instance":{"id":"28","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: person, country, field, programming language, task, researcher, metric, conference, algorithm, location, organization, product, university and O.\nSentence: It 's easy to check that the logistic loss and binary cross entropy loss ( Log loss ) are in fact the same ( up to a multiplicative constant math \\ frac { 1 } { \\ log ( 2 ) } / math ) .The cross entropy loss is closely related to the Kullback-Leibler divergence between the empirical distribution and the predicted distribution .","prompt_labels":"It(O) 's(O) easy(O) to(O) check(O) that(O) the(O) logistic(B-metric) loss(I-metric) and(O) binary(B-metric) cross(I-metric) entropy(I-metric) loss(I-metric) ((O) Log(B-metric) loss(I-metric) )(O) are(O) in(O) fact(O) the(O) same(O) ((O) up(O) to(O) a(O) multiplicative(O) constant(O) math(O) \\(O) frac(O) {(O) 1(O) }(O) {(O) \\(O) log(O) ((O) 2(O) )(O) }(O) /(O) math(O) )(O) .The(O) cross(B-metric) entropy(I-metric) loss(I-metric) is(O) closely(O) related(O) to(O) the(O) Kullback-Leibler(B-metric) divergence(I-metric) between(O) the(O) empirical(O) distribution(O) and(O) the(O) predicted(O) distribution(O) .(O)","words":["It","'s","easy","to","check","that","the","logistic","loss","and","binary","cross","entropy","loss","(","Log","loss",")","are","in","fact","the","same","(","up","to","a","multiplicative","constant","math","\\","frac","{","1","}","{","\\","log","(","2",")","}","/","math",")",".The","cross","entropy","loss","is","closely","related","to","the","Kullback-Leibler","divergence","between","the","empirical","distribution","and","the","predicted","distribution","."],"labels":["O","O","O","O","O","O","O","B-metric","I-metric","O","B-metric","I-metric","I-metric","I-metric","O","B-metric","I-metric","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","B-metric","I-metric","I-metric","O","O","O","O","O","B-metric","I-metric","O","O","O","O","O","O","O","O","O"]},"label_list":["person","country","field","programming language","task","researcher","metric","conference","algorithm","location","organization","product","university"]}
{"id":"32","dataset":"crossner_ai","split":"dev","instance":{"id":"32","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: researcher, programming language, task, country, algorithm, person, field, conference, university, metric, product, organization, location and O.\nSentence: Neural network research stagnated after the publication of machine learning research by Marvin Minsky and Seymour Papert ( 1969 ) .","prompt_labels":"Neural(B-algorithm) network(I-algorithm) research(O) stagnated(O) after(O) the(O) publication(O) of(O) machine(B-field) learning(I-field) research(O) by(O) Marvin(B-researcher) Minsky(I-researcher) and(O) Seymour(B-researcher) Papert(I-researcher) ((O) 1969(O) )(O) .(O)","words":["Neural","network","research","stagnated","after","the","publication","of","machine","learning","research","by","Marvin","Minsky","and","Seymour","Papert","(","1969",")","."],"labels":["B-algorithm","I-algorithm","O","O","O","O","O","O","B-field","I-field","O","O","B-researcher","I-researcher","O","B-researcher","I-researcher","O","O","O","O"]},"label_list":["researcher","programming language","task","country","algorithm","person","field","conference","university","metric","product","organization","location"]}
{"id":"37","dataset":"crossner_ai","split":"dev","instance":{"id":"37","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: person, organization, task, algorithm, field, product, metric, country, conference, researcher, university, programming language, location and O.\nSentence: Starring Harrison Ford , Rutger Hauer and Sean Young , it is loosely based on Philip K. Dick ' s novel Do Androids Dream of Electric Sheep ? ( 1968 ) .","prompt_labels":"Starring(O) Harrison(B-person) Ford(I-person) ,(O) Rutger(B-person) Hauer(I-person) and(O) Sean(B-person) Young(I-person) ,(O) it(O) is(O) loosely(O) based(O) on(O) Philip(B-person) K.(I-person) Dick(I-person) '(O) s(O) novel(O) Do(O) Androids(O) Dream(O) of(O) Electric(O) Sheep(O) ?(O) ((O) 1968(O) )(O) .(O)","words":["Starring","Harrison","Ford",",","Rutger","Hauer","and","Sean","Young",",","it","is","loosely","based","on","Philip","K.","Dick","'","s","novel","Do","Androids","Dream","of","Electric","Sheep","?","(","1968",")","."],"labels":["O","B-person","I-person","O","B-person","I-person","O","B-person","I-person","O","O","O","O","O","O","B-person","I-person","I-person","O","O","O","O","O","O","O","O","O","O","O","O","O","O"]},"label_list":["person","organization","task","algorithm","field","product","metric","country","conference","researcher","university","programming language","location"]}
{"id":"39","dataset":"crossner_ai","split":"dev","instance":{"id":"39","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: task, researcher, person, organization, programming language, algorithm, conference, university, country, location, metric, field, product and O.\nSentence: General sampling from the truncated normal can be achieved using approximations to the normal CDF and the probit function , and R has a function codertnorm ( ) / code for generating truncated-normal samples .","prompt_labels":"General(O) sampling(O) from(O) the(O) truncated(O) normal(O) can(O) be(O) achieved(O) using(O) approximations(O) to(O) the(O) normal(O) CDF(B-algorithm) and(O) the(O) probit(B-algorithm) function(I-algorithm) ,(O) and(O) R(B-programming language) has(O) a(O) function(O) codertnorm(O) ((O) )(O) /(O) code(O) for(O) generating(O) truncated-normal(O) samples(O) .(O)","words":["General","sampling","from","the","truncated","normal","can","be","achieved","using","approximations","to","the","normal","CDF","and","the","probit","function",",","and","R","has","a","function","codertnorm","(",")","/","code","for","generating","truncated-normal","samples","."],"labels":["O","O","O","O","O","O","O","O","O","O","O","O","O","O","B-algorithm","O","O","B-algorithm","I-algorithm","O","O","B-programming language","O","O","O","O","O","O","O","O","O","O","O","O","O"]},"label_list":["task","researcher","person","organization","programming language","algorithm","conference","university","country","location","metric","field","product"]}
{"id":"44","dataset":"crossner_ai","split":"dev","instance":{"id":"44","instruction_inputs":"Please analyze the sentence provided, identifying the type of entity for each word on a token-by-token basis.\nOutput format is: word_1(label_1), word_2(label_2), ...\nWe'll use the BIO-format to label the entities, where:\n1. B- (Begin) indicates the start of a named entity.\n2. I- (Inside) is used for words within a named entity but are not the first word.\n3. O (Outside) denotes words that are not part of a named entity.\n\nUse the specific entity tags: university, conference, field, metric, programming language, country, researcher, product, task, location, algorithm, organization, person and O.\nSentence: Two professors , Hal Abelson and Gerald Jay Sussman , chose to remain neutral - their group was referred to variously as Switzerland and Project MAC for the next 30 years .","prompt_labels":"Two(O) professors(O) ,(O) Hal(B-researcher) Abelson(I-researcher) and(O) Gerald(B-researcher) Jay(I-researcher) Sussman(I-researcher) ,(O) chose(O) to(O) remain(O) neutral(O) -(O) their(O) group(O) was(O) referred(O) to(O) variously(O) as(O) Switzerland(B-country) and(O) Project(O) MAC(O) for(O) the(O) next(O) 30(O) years(O) .(O)","words":["Two","professors",",","Hal","Abelson","and","Gerald","Jay","Sussman",",","chose","to","remain","neutral","-","their","group","was","referred","to","variously","as","Switzerland","and","Project","MAC","for","the","next","30","years","."],"labels":["O","O","O","B-researcher","I-researcher","O","B-researcher","I-researcher","I-researcher","O","O","O","O","O","O","O","O","O","O","O","O","O","B-country","O","O","O","O","O","O","O","O","O"]},"label_list":["university","conference","field","metric","programming language","country","researcher","product","task","location","algorithm","organization","person"]}
